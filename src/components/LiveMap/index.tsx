import React, { Component } from "react";
import 'leaflet';
import 'leaflet-draw';
import 'leaflet-realtime'
import 'leaflet-gpx'
declare const L: any

import { GeoJsonObject } from "geojson";
import { TRACK } from './track.js'

export class LiveMap extends Component<any> {

    gpx = TRACK as GeoJsonObject;

    points = [[-0.038333, 43.7670631, 5], [-0.0383641, 43.7670773, 0], [-0.0384355, 43.7670778, 0], [-0.0387161, 43.7671708, 0], [-0.0390553, 43.7673015, 0], [-0.0391838, 43.7673678, 0], [-0.0393128, 43.767482, 0], [-0.0393648, 43.7675436, 0], [-0.0394051, 43.7676148, 0], [-0.0394266, 43.7676649, 0], [-0.0394433, 43.7677428, 0], [-0.039441, 43.7678751, 0], [-0.0394301, 43.7679163, 0], [-0.03939, 43.7679958, 0], [-0.0392799, 43.768153, 0], [-0.0389151, 43.7686063, 0], [-0.0386111, 43.7690158, 0], [-0.0385281, 43.7691186, 0], [-0.0384705, 43.7691745, 0], [-0.0384165, 43.769214, 0], [-0.03835, 43.7692471, 0], [-0.0382083, 43.7692861, 0], [-0.0380865, 43.7692946, 0], [-0.0379739, 43.7692903, 0], [-0.0378016, 43.7692678, 0], [-0.0376716, 43.7692118, 0], [-0.037536, 43.7691221, 0], [-0.0374096, 43.769026, 0], [-0.0371731, 43.7688671, 0], [-0.0367128, 43.7685105, 0], [-0.0363385, 43.7682691, 0], [-0.036181, 43.768146, 0], [-0.035924, 43.7679691, 12], [-0.0358156, 43.7678603, 12], [-0.0357673, 43.7677891, 0], [-0.0357576, 43.7677128, 0], [-0.035776, 43.7676471, 0], [-0.0357981, 43.7676105, 0], [-0.035853, 43.7675621, 0], [-0.0359396, 43.7675215, 0], [-0.0360408, 43.7675076, 12], [-0.0362601, 43.7675086, 12], [-0.0365756, 43.7675441, 12], [-0.036706, 43.767586, 12], [-0.0368538, 43.7676073, 12], [-0.0369638, 43.7676451, 0], [-0.0370731, 43.7677003, 0], [-0.0372155, 43.7678048, 0], [-0.0373491, 43.7680043, 0], [-0.0374818, 43.7682841, 0], [-0.0375876, 43.7684836, 0], [-0.0376726, 43.7686793, 0], [-0.0377193, 43.7687505, 0], [-0.0377833, 43.7688175, 0], [-0.0378653, 43.7688695, 0], [-0.0380011, 43.768919, 0], [-0.0380515, 43.7689258, 0], [-0.0381888, 43.7689128, 0], [-0.0382335, 43.7688996, 0], [-0.0382883, 43.7688688, 0], [-0.038368, 43.7687998, 0], [-0.0385668, 43.7685711, 0], [-0.0387855, 43.7682283, 0], [-0.0388388, 43.7681195, 0], [-0.0388521, 43.768057, 0], [-0.038845, 43.7679685, 0], [-0.0388023, 43.7678768, 0], [-0.0386831, 43.767721, 0], [-0.0386228, 43.767671, 0], [-0.0385678, 43.7676388, 0], [-0.0379545, 43.7674481, 0], [-0.0376631, 43.767374, 0], [-0.0373005, 43.7672578, 0], [-0.0370509, 43.7671948, 0], [-0.0369093, 43.7671715, 0], [-0.0366423, 43.7670996, 0], [-0.0365621, 43.7670888, 0], [-0.0365223, 43.7670776, 0], [-0.036513, 43.7670565, 0], [-0.036485, 43.7670491, 0], [-0.0360436, 43.7670081, 0], [-0.035805, 43.7669695, 0], [-0.0355266, 43.7669508, 0], [-0.0353886, 43.7669253, 0], [-0.0352578, 43.766874, 0], [-0.0351643, 43.7668126, 0], [-0.0351191, 43.7667715, 0], [-0.0350888, 43.7667173, 0], [-0.0350796, 43.7666605, 0], [-0.0350964, 43.7665735, 0], [-0.0351258, 43.7665083, 0], [-0.0351936, 43.7664166, 0], [-0.0353065, 43.7663121, 0], [-0.035408, 43.7662426, 0], [-0.0355636, 43.7661696, 0], [-0.0356316, 43.7661556, 0], [-0.035742, 43.7661553, 0], [-0.0358513, 43.7661691, 0], [-0.0359956, 43.7661983, 0], [-0.0360708, 43.7662233, 0]]
    i = 0;


    carIcon = L.icon({
        iconUrl: './car.png',
        iconSize: [15, 15]
    })

    map: any;
    layer: any;
    mapWithPoints: any;
    marker: any;

    px= 0;
    py= 0;

    componentDidMount() {

        this.points.forEach(p => {
            this.px+=p[1];
            this.py+=p[0];
        });
        this.px=this.px/(this.points.length);
        this.py=this.py/(this.points.length);
        console.log(this.px, this.py);
        // create map
        this.map = L.map('circuitMap',
        ).setView([
            this.px, this.py
        ], 17);
        L.tileLayer('').addTo(this.map);

        let mapWithPath = L.geoJSON(this.gpx).addTo(this.map);
        mapWithPath.setStyle({ color: 'white', weight: 4 });


        this.marker = L.marker([this.points[this.i%(this.points.length-1)][1], this.points[this.i%(this.points.length-1)][0]], {icon: this.carIcon});
        this.myFunction();
        

    }

    myFunction() {
        setInterval(() => {

            this.i++
            this.marker.remove();

            this.marker = L.marker([this.points[this.i%(this.points.length-1)][1], this.points[this.i%(this.points.length-1)][0]],  {icon: this.carIcon});
            this.marker.addTo(this.map);


        }, 50)

    }

    render() {
        return (
            <div className="parentMap">
                {//<input type="file" id="file-selector" multiple />
                }

                <div id="circuitMap"></div>
            </div>
        )
    }
}